INDEX PRODUCTOSSSSSSSSSSS
@model IEnumerable<SysCafeteriasweetcoffee.Models.Producto>
<!-- Asegúrate de usar el namespace correcto -->
@{
    ViewData["Title"] = "Index";
}

<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-3 mb-3">
            <div class="dessert-item card">
                <img src="@item.img" class="card-img-top" alt="Imagen del producto" style="height: 200px; object-fit: cover;">
                <div class="card-body">
                    <h5 class="card-title">@item.Nombre</h5>
                    <p class="card-text">
                        <small class="text-muted">Precio: @item.Precio</small><br>
                        <small class="text-muted">Descripción: @item.Descripcion</small><br>
                    </p>
                    <div class="d-flex justify-content-between">
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-secondary">Ver</a>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-info">Editar</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Eliminar</a>
                    </div>
                    <button type="button" class="btn btn-primary order-btn"
                            data-id="@item.Id"
                            data-nombre="@item.Nombre"
                            data-precio="@item.Precio">
                        Ordenar
                    </button>
                </div>
            </div>
        </div>
    }
</div>

<!-- Barra lateral para la orden -->
<div class="sidebar">
    <h2>Mi Orden</h2>
    <ul id="order-list"></ul>
    <p id="total">Total: $0.00</p>
    <button onclick="finalizeOrder()">Realizar pedido</button>
</div>


<style>
    .sidebar {
        width: 250px;
        padding: 20px;
        background-color: #f8f9fa;
        position: fixed;
        right: 0;
        top: 0;
        height: 100%;
        box-shadow: -3px 0px 10px rgba(0, 0, 0, 0.1);
    }

        .sidebar h2 {
            margin-top: 0;
        }

    #order-list {
        list-style-type: none;
        padding: 0;
    }

    .order-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

        .order-item input[type="number"] {
            width: 40px;
        }

    .sidebar button {
        background-color: #007bff;
        color: #fff;
        width: 100%;
        padding: 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

</style>

<script>
    let order = [];

    document.querySelectorAll('.order-btn').forEach(button => {
        button.addEventListener('click', () => {
            const id = button.getAttribute('data-id');
            const nombre = button.getAttribute('data-nombre');
            const precio = parseFloat(button.getAttribute('data-precio'));

            addToOrder(id, nombre, precio);
        });
    });

    function addToOrder(id, nombre, precio) {
        const existingItem = order.find(item => item.id === id);
        if (existingItem) {
            existingItem.quantity += 1;
        } else {
            order.push({ id, nombre, precio, quantity: 1 });
        }
        renderOrder();
    }

    function renderOrder() {
        const orderList = document.getElementById("order-list");
        orderList.innerHTML = "";
        let total = 0;

        order.forEach(item => {
            total += item.precio * item.quantity;

            const listItem = document.createElement("li");
            listItem.classList.add("order-item");

            listItem.innerHTML = `
                    ${item.nombre} - $${item.precio.toFixed(2)}
                    <input type="number" value="${item.quantity}" min="1" onchange="updateQuantity('${item.id}', this.value)">
                    <button onclick="removeFromOrder('${item.id}')">Eliminar</button>
                `;

            orderList.appendChild(listItem);
        });

        document.getElementById("total").innerText = `Total: $${total.toFixed(2)}`;
    }

    function updateQuantity(id, quantity) {
        const item = order.find(item => item.id === id);
        if (item) {
            item.quantity = parseInt(quantity);
            renderOrder();
        }
    }

    function removeFromOrder(id) {
        order = order.filter(item => item.id !== id);
        renderOrder();
    }

    function finalizeOrder() {
        alert("Pedido realizado. Total: $" + document.getElementById("total").innerText.split(": $")[1]);
        order = [];
        renderOrder();
    }

</script>